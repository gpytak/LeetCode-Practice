/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* test = new ListNode(0);
        ListNode* curr = test;
        while(list1 != NULL || list2 != NULL)
        {
            int x = list1 ? list1->val : 100;
            int y = list2 ? list2->val : 100;
            int z = (x <= y) ? x : y;
            curr->next = new ListNode(z);
            curr = curr->next;
            if(z == x)
                list1 = list1 ? list1->next : nullptr;
            else
                list2 = list2 ? list2->next : nullptr;
        }
        ListNode* result = test->next;
        delete test;
        return result;
    }
};
