class Solution {
public:
    int minimumOperations(vector<int>& nums, int start, int goal) {
       int n = nums.size();
        queue<int>q;
        q.push(start);
        set<int>output;
        int lvl = -1;
        while(!q.empty())
        {
            int sz  = q.size();
            lvl++;
            while(sz--)
            {
                int val = q.front();
                q.pop();
                if(val==goal)
                {
                    return lvl;
                }
                if(val <0 || val> 1000)
                {
                    continue;
                }
                if(output.find(val)!=output.end())
                {
                    continue;
                }
                output.insert(val);
                for(int i = 0 ; i < n ; i++)
                {
                    int h = val + nums[i];
                    q.push(h);
                    int g = val - nums[i];
                    q.push(g);
                    int k = val^nums[i];
                    q.push(k);
                }
            }
        }
        return -1;
    }
};
