/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode *root, set<int> &S)
    {
        if (root != NULL)
        {
            S.insert(root->val);
            solve(root->left, S);
            solve(root->right, S);
        }
    }

    int findSecondMinimumValue(TreeNode* root) {
        set<int> S;
        solve(root, S);
        S.erase(S.begin());

        if (!S.empty())
            return *(S.begin());

        return -1;
    }
};
